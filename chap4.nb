(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    127395,       2615]
NotebookOptionsPosition[    123590,       2545]
NotebookOutlinePosition[    123992,       2561]
CellTagsIndexPosition[    123949,       2558]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Example 4.1", "Section",
 CellChangeTimes->{{3.945271847705181*^9, 
  3.9452718601925163`*^9}},ExpressionUUID->"d99185b5-faa5-45ae-95f9-\
d0826cecb74c"],

Cell[CellGroupData[{

Cell["Chebyshev", "Subsection",
 CellChangeTimes->{{3.945271868771474*^9, 
  3.945271880238389*^9}},ExpressionUUID->"036c22ba-eaee-40d8-940a-\
bc0c6d1fe605"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tit", "[", 
   RowBox[{"Tn_", ",", "Tnm1_", ",", " ", "x_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"2", " ", "x", " ", "Tn"}], " ", "-", " ", 
   "Tnm1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TitM", "[", 
   RowBox[{"Tn_", ",", "Tnm1_", ",", " ", "x_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"x", ".", "Tn"}]}], " ", "-", " ", "Tnm1"}]}]}], "Input",
 CellChangeTimes->{{3.945270652106728*^9, 3.945270835463855*^9}, {
  3.945271583108879*^9, 3.945271612988641*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"49d3b3e8-e949-404c-aa0c-12813efc3433"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "Tnm1"}], "+", 
  RowBox[{"2", " ", "Tn", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.9452716155929956`*^9, 3.945358277676893*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6dd49eb4-177b-4814-8871-a132b051373a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "Tnm1"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"x", ".", "Tn"}]}]}]], "Output",
 CellChangeTimes->{3.9452716155929956`*^9, 3.9453582776893253`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"297e05fd-bc65-4594-9de6-4859602170b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"T1", " ", "=", " ", "x"}], "\[IndentingNewLine]", 
 RowBox[{"T2", "=", 
  RowBox[{"Tit", "[", 
   RowBox[{"x", ",", "1", ",", " ", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9452708603919487`*^9, 3.945270884416258*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"2c73b044-2bcb-42c4-8aa3-bfe8e1ad85a3"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{{3.945270866973855*^9, 3.945270885870027*^9}, 
   3.9452713950010023`*^9, 3.94535827903741*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"48116736-6a34-4e10-b1dc-9919beea4f5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"]}]}]], "Output",
 CellChangeTimes->{{3.945270866973855*^9, 3.945270885870027*^9}, 
   3.9452713950010023`*^9, 3.945358279039588*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"b456b5a4-5e34-4109-a281-e072be8f65cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T3", "=", 
  RowBox[{
   RowBox[{"Tit", "[", 
    RowBox[{"T2", ",", "T1", ",", " ", "x"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.945270888129798*^9, 3.945270910179443*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"36acf10c-a282-4a85-a590-0d666971ba49"],

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3"}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["x", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.945270901518197*^9, 3.945270910680101*^9}, 
   3.945358280419878*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"23ebcba2-3fa4-4181-a446-d4e1790f059c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T4", "=", 
  RowBox[{
   RowBox[{"Tit", "[", 
    RowBox[{"T3", ",", "T2", ",", " ", "x"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9452709324584303`*^9, 3.94527093588062*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"0a1a0baf-8610-49fe-830e-bf2f1fca3866"],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"8", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"8", " ", 
   SuperscriptBox["x", "4"]}]}]], "Output",
 CellChangeTimes->{3.945270936151826*^9, 3.945358281515129*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"51930d46-6dd7-4c3f-b85a-6ddc815eaab4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T1M", "[", "x_", "]"}], ":=", "x"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2M", "[", "x_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"x", ".", "x"}]}], " ", "-", " ", 
    RowBox[{"IdentityMatrix", "[", 
     RowBox[{"Length", "[", "x", "]"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T3M", "[", "x_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TitM", "[", 
    RowBox[{
     RowBox[{"T2M", "[", "x", "]"}], ",", 
     RowBox[{"T1M", "[", "x", "]"}], ",", " ", "x"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T4M", "[", "x_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TitM", "[", 
    RowBox[{
     RowBox[{"T3M", "[", "x", "]"}], ",", 
     RowBox[{"T2M", "[", "x", "]"}], ",", " ", "x"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T5M", "[", "x_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"TitM", "[", 
    RowBox[{
     RowBox[{"T4M", "[", "x", "]"}], ",", 
     RowBox[{"T3M", "[", "x", "]"}], ",", " ", "x"}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.945271188798847*^9, 3.9452712216783133`*^9}, {
   3.945271319295233*^9, 3.945271349871681*^9}, {3.945271407066568*^9, 
   3.945271455516739*^9}, {3.945271508300887*^9, 3.945271577907709*^9}, {
   3.945271630572215*^9, 3.945271635740119*^9}, {3.9452716718399563`*^9, 
   3.9452717681593103`*^9}, 3.9452718342493896`*^9, {3.9452729276989403`*^9, 
   3.945272936808197*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7339447c-0107-4be7-ae86-b08ee3a02719"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison", "Subsection",
 CellChangeTimes->{{3.9452718970166817`*^9, 
  3.945271903919961*^9}},ExpressionUUID->"785dbf27-e660-4eb1-8d2b-\
650ef7f2f7f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H", " ", "=", " ", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"Sqrt", "[", "2", "]"}]], 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.9452709911759167`*^9, 3.945271005058309*^9}, {
  3.945271906681409*^9, 3.945271907320445*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d8b23113-dfe8-4a0d-bebf-2f98ac9eacee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.945271005466711*^9, 3.945358284867024*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8bbebd65-7a07-429d-8964-094db33ca1cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Uexact", "[", "t_", "]"}], "=", 
  RowBox[{
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "I"}], " ", "t", " ", "H"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.945271911216815*^9, 3.945271944432786*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"5791f555-eed8-4d97-8458-33df6024bba9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], 
       SqrtBox["2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], 
       SqrtBox["2"]]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], "+", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.945271920748989*^9, 3.945271945530078*^9}, 
   3.945358287154861*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"d882ad89-f160-4320-bc78-acebc5814492"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"UTrun1", "[", 
    RowBox[{"t_", ",", " ", "H_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"0", ",", "t"}], "]"}], 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"Length", "[", "H", "]"}], "]"}]}], " ", "-", 
    RowBox[{"2", " ", "I", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}], " ", "H"}]}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UTrun2", "[", 
   RowBox[{"t_", ",", " ", "H_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"UTrun1", "[", 
    RowBox[{"t", ",", "H"}], "]"}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"2", ",", "t"}], "]"}], " ", 
    RowBox[{"T2M", "[", "H", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UTrun3", "[", 
   RowBox[{"t_", ",", " ", "H_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"UTrun2", "[", 
    RowBox[{"t", ",", "H"}], "]"}], "+", 
   RowBox[{"2", " ", "I", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"3", ",", "t"}], "]"}], " ", 
    RowBox[{"T3M", "[", "H", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UTrun4", "[", 
   RowBox[{"t_", ",", " ", "H_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"UTrun3", "[", 
    RowBox[{"t", ",", "H"}], "]"}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"4", ",", "t"}], "]"}], " ", 
    RowBox[{"T4M", "[", "H", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UTrun5", "[", 
   RowBox[{"t_", ",", " ", "H_"}], "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"UTrun4", "[", 
    RowBox[{"t", ",", "H"}], "]"}], "-", 
   RowBox[{"2", " ", "I", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"5", ",", "t"}], "]"}], " ", 
    RowBox[{"T5M", "[", "H", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.945271992940028*^9, 3.945272049442432*^9}, {
  3.945272139455649*^9, 3.94527216971673*^9}, {3.945272385370431*^9, 
  3.9452724857539053`*^9}, {3.9452726375428343`*^9, 3.9452726668759127`*^9}, {
  3.94527280671388*^9, 3.945272838030897*^9}, {3.945272900531199*^9, 
  3.945272900615766*^9}, {3.9452729448993464`*^9, 3.945272981697774*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"cd88a139-29dc-4383-bd48-22cd819f0573"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"p1Exa", " ", "=", " ", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ".", 
     RowBox[{"Uexact", "[", "t", "]"}], ".", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "^", 
   "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"st", " ", "=", " ", 
  RowBox[{
   RowBox[{"UTrun1", "[", 
    RowBox[{"t", ",", " ", "H"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"p1Trun1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ".", 
      RowBox[{"UTrun1", "[", 
       RowBox[{"t", ",", " ", "H"}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "^", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Conjugate", "[", "st", "]"}], ".", "st"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"st", " ", "=", " ", 
  RowBox[{
   RowBox[{"UTrun3", "[", 
    RowBox[{"t", ",", " ", "H"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"p1Trun3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ".", 
      RowBox[{"UTrun3", "[", 
       RowBox[{"t", ",", " ", "H"}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "^", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Conjugate", "[", "st", "]"}], ".", "st"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"st", " ", "=", " ", 
  RowBox[{
   RowBox[{"UTrun4", "[", 
    RowBox[{"t", ",", " ", "H"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"p1Trun4", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ".", 
      RowBox[{"UTrun4", "[", 
       RowBox[{"t", ",", " ", "H"}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "^", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Conjugate", "[", "st", "]"}], ".", "st"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"st", " ", "=", " ", 
  RowBox[{
   RowBox[{"UTrun5", "[", 
    RowBox[{"t", ",", " ", "H"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"p1Trun5", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ".", 
      RowBox[{"UTrun5", "[", 
       RowBox[{"t", ",", " ", "H"}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "^", "2"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Conjugate", "[", "st", "]"}], ".", "st"}], ")"}]}]}]}], "Input",\

 CellChangeTimes->{{3.945272214550559*^9, 3.945272330318232*^9}, {
  3.9452724906902447`*^9, 3.945272501201374*^9}, {3.945272599878645*^9, 
  3.945272600659038*^9}, {3.945272681752451*^9, 3.9452726842920837`*^9}, {
  3.945272854711725*^9, 3.9452728667430687`*^9}, {3.945272994242313*^9, 
  3.945272999561112*^9}, {3.9453583202017813`*^9, 3.9453584060660563`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"78ebc70e-6611-4f3a-96f8-f6adfc15ffd1"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{"Sin", "[", "t", "]"}], "]"}], "2"]}]], "Output",
 CellChangeTimes->{{3.945272288133367*^9, 3.9452723308005543`*^9}, 
   3.945272389420384*^9, {3.945272501667419*^9, 3.9452725257188683`*^9}, 
   3.945272684874168*^9, {3.9452728445691357`*^9, 3.945272867255763*^9}, 
   3.945272903778846*^9, {3.945272986208579*^9, 3.945272999856455*^9}, 
   3.9452730839034147`*^9, 3.945358408113467*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"c3e2ebfc-247f-42fa-aaf9-dedff6b22e4b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "t"}], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    SqrtBox["2"], " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"1", ",", "t"}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.945272288133367*^9, 3.9452723308005543`*^9}, 
   3.945272389420384*^9, {3.945272501667419*^9, 3.9452725257188683`*^9}, 
   3.945272684874168*^9, {3.9452728445691357`*^9, 3.945272867255763*^9}, 
   3.945272903778846*^9, {3.945272986208579*^9, 3.945272999856455*^9}, 
   3.9452730839034147`*^9, 3.945358408120998*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"5aad0051-0ab4-44dc-ac8f-e5cdd9fb04b2"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}], "]"}], "2"]}], 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{"1", ",", "t"}], "]"}], " ", 
    RowBox[{"Conjugate", "[", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", "t"}], "]"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", 
       RowBox[{"BesselJ", "[", 
        RowBox[{"1", ",", "t"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{"BesselJ", "[", 
        RowBox[{"0", ",", "t"}], "]"}], "]"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["2"], " ", 
       RowBox[{"Conjugate", "[", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"1", ",", "t"}], "]"}], "]"}]}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{{3.945272288133367*^9, 3.9452723308005543`*^9}, 
   3.945272389420384*^9, {3.945272501667419*^9, 3.9452725257188683`*^9}, 
   3.945272684874168*^9, {3.9452728445691357`*^9, 3.945272867255763*^9}, 
   3.945272903778846*^9, {3.945272986208579*^9, 3.945272999856455*^9}, 
   3.9452730839034147`*^9, 3.945358408122966*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"9f82b6e9-b473-4f88-9295-9d06dbdd73dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "t"}], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"2", ",", "t"}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"3", ",", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"3", ",", "t"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.945272288133367*^9, 3.9452723308005543`*^9}, 
   3.945272389420384*^9, {3.945272501667419*^9, 3.9452725257188683`*^9}, 
   3.945272684874168*^9, {3.9452728445691357`*^9, 3.945272867255763*^9}, 
   3.945272903778846*^9, {3.945272986208579*^9, 3.945272999856455*^9}, 
   3.9452730839034147`*^9, 3.945358408126923*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"874cdb10-2191-45e1-ad0c-f6369dbf5e65"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SqrtBox["2"], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"1", ",", "t"}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"3", ",", "t"}], "]"}]}]}], "]"}], "2"], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"1", ",", "t"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"3", ",", "t"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"1", ",", "t"}], "]"}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"3", ",", "t"}], "]"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BesselJ", "[", 
        RowBox[{"0", ",", "t"}], "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"1", ",", "t"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"2", ",", "t"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"3", ",", "t"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"1", ",", "t"}], "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"2", ",", "t"}], "]"}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"3", ",", "t"}], "]"}], "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.945272288133367*^9, 3.9452723308005543`*^9}, 
   3.945272389420384*^9, {3.945272501667419*^9, 3.9452725257188683`*^9}, 
   3.945272684874168*^9, {3.9452728445691357`*^9, 3.945272867255763*^9}, 
   3.945272903778846*^9, {3.945272986208579*^9, 3.945272999856455*^9}, 
   3.9452730839034147`*^9, 3.945358408129035*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"bf513751-4037-43a2-8deb-099fd17a1dd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "t"}], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"2", ",", "t"}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"3", ",", "t"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"4", ",", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"3", ",", "t"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.945272288133367*^9, 3.9452723308005543`*^9}, 
   3.945272389420384*^9, {3.945272501667419*^9, 3.9452725257188683`*^9}, 
   3.945272684874168*^9, {3.9452728445691357`*^9, 3.945272867255763*^9}, 
   3.945272903778846*^9, {3.945272986208579*^9, 3.945272999856455*^9}, 
   3.9452730839034147`*^9, 3.9453584081334143`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"f9202c05-0420-4646-b0b6-173da3286576"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SqrtBox["2"], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"1", ",", "t"}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"3", ",", "t"}], "]"}]}]}], "]"}], "2"], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"1", ",", "t"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"3", ",", "t"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"1", ",", "t"}], "]"}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"3", ",", "t"}], "]"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BesselJ", "[", 
        RowBox[{"0", ",", "t"}], "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"1", ",", "t"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"2", ",", "t"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"3", ",", "t"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"4", ",", "t"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"1", ",", "t"}], "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"2", ",", "t"}], "]"}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"3", ",", "t"}], "]"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"4", ",", "t"}], "]"}], "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.945272288133367*^9, 3.9452723308005543`*^9}, 
   3.945272389420384*^9, {3.945272501667419*^9, 3.9452725257188683`*^9}, 
   3.945272684874168*^9, {3.9452728445691357`*^9, 3.945272867255763*^9}, 
   3.945272903778846*^9, {3.945272986208579*^9, 3.945272999856455*^9}, 
   3.9452730839034147`*^9, 3.945358408135459*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"d276698d-a3b2-45e5-9eca-74ccac377238"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"0", ",", "t"}], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"2", ",", "t"}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"3", ",", "t"}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"4", ",", "t"}], "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"5", ",", "t"}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"3", ",", "t"}], "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     SqrtBox["2"], " ", 
     RowBox[{"BesselJ", "[", 
      RowBox[{"5", ",", "t"}], "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.945272288133367*^9, 3.9452723308005543`*^9}, 
   3.945272389420384*^9, {3.945272501667419*^9, 3.9452725257188683`*^9}, 
   3.945272684874168*^9, {3.9452728445691357`*^9, 3.945272867255763*^9}, 
   3.945272903778846*^9, {3.945272986208579*^9, 3.945272999856455*^9}, 
   3.9452730839034147`*^9, 3.94535840813859*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"58f00f05-2f98-42a5-a62d-0ebbe85df888"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SqrtBox["2"], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"1", ",", "t"}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"3", ",", "t"}], "]"}]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"5", ",", "t"}], "]"}]}]}], "]"}], "2"], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"1", ",", "t"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"3", ",", "t"}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"5", ",", "t"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"1", ",", "t"}], "]"}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"3", ",", "t"}], "]"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"5", ",", "t"}], "]"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BesselJ", "[", 
        RowBox[{"0", ",", "t"}], "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"1", ",", "t"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"2", ",", "t"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"3", ",", "t"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"4", ",", "t"}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"5", ",", "t"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Conjugate", "[", 
        RowBox[{"BesselJ", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"1", ",", "t"}], "]"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"2", ",", "t"}], "]"}], "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"3", ",", "t"}], "]"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"4", ",", "t"}], "]"}], "]"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"Conjugate", "[", 
         RowBox[{"BesselJ", "[", 
          RowBox[{"5", ",", "t"}], "]"}], "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.945272288133367*^9, 3.9452723308005543`*^9}, 
   3.945272389420384*^9, {3.945272501667419*^9, 3.9452725257188683`*^9}, 
   3.945272684874168*^9, {3.9452728445691357`*^9, 3.945272867255763*^9}, 
   3.945272903778846*^9, {3.945272986208579*^9, 3.945272999856455*^9}, 
   3.9452730839034147`*^9, 3.9453584081409883`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"f811998b-4e12-40d3-afb6-c5471c7d3de1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plot", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p1Exa", ",", "p1Trun1", ",", "p1Trun3", ",", "p1Trun5"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0.8", ",", "0", ",", "0"}], "]"}], ",", 
         RowBox[{"Dashing", "[", "Medium", "]"}], ",", 
         RowBox[{"Thickness", "[", "0.008", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0.4", ",", "0"}], "]"}], ",", "DotDashed", ",", 
         RowBox[{"Thickness", "[", "0.008", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", 
         RowBox[{"Dashing", "[", "0.02", "]"}], ",", 
         RowBox[{"Thickness", "[", "0.008", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<t\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P\), \(1\)]\)(t)\>\"", ",", 
       
       RowBox[{"FontSize", "->", "20"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Exact\>\"", ",", "\"\<r = 1\>\"", ",", "\"\<r = 3\>\"", ",", 
       "\"\<r = 5\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.945272197989234*^9, 3.94527219936375*^9}, {
  3.945272342430524*^9, 3.945272353904437*^9}, {3.94527268948639*^9, 
  3.945272784237577*^9}, {3.945272870416541*^9, 3.945272884798757*^9}, {
  3.9452730088568687`*^9, 3.945273013384947*^9}, {3.94527309448287*^9, 
  3.945273125508643*^9}, {3.945358547799676*^9, 3.94535856082799*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"af0a4c9a-1b49-4fcf-9044-7fa4d37d9486"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$8430#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0.8, 0, 0], 
          Dashing[Medium], 
          Thickness[0.008]], 
         LineBox[CompressedData["
1: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
Dw==
          "]]}, Annotation[#, "Charting`Private`Tag$8430#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0.4, 0], 
          Dashing[{0, Small, Small, Small}], 
          Thickness[0.008]], 
         LineBox[CompressedData["
1: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
VveER47uB+F/HhCL1g==
          "]]}, Annotation[#, "Charting`Private`Tag$8430#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 1], 
          Dashing[0.02], 
          Thickness[0.008]], 
         LineBox[CompressedData["
1:eJwVWnk8Ve8Tln1frnDJct0rhMhSSmUGiaSELEUqhTaSlCwpZU2yFlJCiLIT
kWSrLH2lLNmuo0hl37OV3/39dT7P553zvjPPPDPnzPkcWceLFk7MTExM8SxM
TP+/PvZ3ZFc/Ha57Zbu3q6mH2O76NoqpDeUswI0AzoyKNt2191W3KRRvOLe7
+Kt+xawuf0xpAXfXLeD2/Eg9rM4Oj6sjZNgoYbCp4rnaz3JhUJk8fW/NJRIa
xpUbNb5IA50/+d/q1xh4Ebux5tUWeZDL5Nq2vHIfHlxqma/WVIULu6+4/pFJ
hCMt9ygC5ZpQ3D6QPmfwCKq+cI31zW+H5fOmfdMuT+DsOdXZXa26kLKuL+yP
YSrwaaefEkzXhz3/RW9c+JoGpTeTdSpV98KvBKOaubPpYDLbpS/OaQJ3T/+1
n13JgDajR/+kthyEtpUzcVMy2dD0V+rM8ktLuPpBestk4XOIv54t2AXWIBHb
3jxukAOFlEMtM1O24KiELKMu+SCQ4JFU3+AAzCs+n+b8CkCnzCC19M8JaB+w
kpozLARfb3axpGRHuJbDUz7ztQjyLMfGWRScwSRmmH0mpRiU5+cTbnCeAclr
NYenz5aAta/Esvffs1Bt4DU1ufIShqTOn/wq6wYcvd8VxmXK4ccRo7HW7MvQ
Vf3mytivclgK7/uIvzzheWZC3WhhBbhrmkke3XIVDnocPD5iUAlkraH9fvRr
8ICr4sFPl7ew619tPOWFP5R4mXhcJlfDkRgZCmy4CY9GtMVn/arB0tTndcmP
m+DWSnKZMayB0pJet7HQW0B61MA8/bUWOvl2mRzmDIYV/tJs9111UOn9Q5lp
LhiGAp4emkqpgxCV0pmTQyFQ6uKfPHm2HvjPGnzb3RYGRzW1dCZW3oGL+tE4
4d8RkNr05NKoTCNwspDjvb1jYS7hpRJxtxGOe0BnmGwc7HVpHvyy1Ag2BZKZ
hh/jYIzlj1VFWxPc7+Dd+mrTA9i++6BOWMhHmE66yGvOmgit+avMCpOf4Jvr
zaBr254ACbgc+FRbofuAdpwcawrslI/TCTndChHx8hfN3VLg3lz2rM/nVlCR
n5q4vDcVtKI7nBxffIZv7SGh5WxP4UaTion68TYYtHb6If82E7IKy+Rf3G8D
a+c92W93PoMvCfosGz+2gaghM29o+TOQc7GtJO9ohwxa6GLqqyxoYglUZRLu
ANIk96vP9c9BdHcv6dP7TqjJfENrFc6HvPyw3guqPeA+RPG9iyUwQhq5a3Ky
B4b9JAJZw0tA4aqJrmJcDxS81Tw60lECKbt4UgeXemB99jOv1QsvIabxrvPR
d73gKTVwc2NKKVwdjJw2sqeDi+3lLEK8HJ7wNN8WMhwA24rCamerKnCBz4lj
HoNwT//IsYL+enD7sWmwJO83xF4ZPJl2txUGHLo5axp/Q3lxs2L2s1aw7ApV
/W/oN1B9R/nyalthe/NP7x8SIxBb+PVvwWIrsBRmCIqGjEDARQmW2NOfIcFP
Vtfr+Cjs1XbaEbjzC9QIiyfuEBwHCaEqOZahNuCWDVQgtk9BeVHgJnaBr9Cw
K1rN33AKFNMCNz3d+BWCbZO1pSymICinw05111dgjnplZHd+ClazVLz4z36F
5X9jLl8fT0HB0xX3yZqvMNpnlfWJeRpKeM6Ysbp3wccEhU3VH6chRCBSlKWy
G+6UaKkf754G1dsXT//91A3GrXo7/v2Yhpm6vQbEYDfUc9jv27U2DXxGLhO2
PD1QeTXq7Cv1GQjRn0+VPtIDuYeXsgsezMBNl813Gyd74J5gs1LqiVmQnD0b
ZcfZB+XaUi8Pus3CmVmniYMSfTDkcBFWfWfhv1GdMWmVPtiZK3zYJn4W2pcd
Fi3N+uDXPvvrfC2z4LQFqnnj+sDg9vgn751z8F+uOj1ClA5uz+Gowr45eJRa
90VTng4PP0cPtVvPgYVpv33xVjpMyWxbUvOYg1vTHL66h+mQXOlPHc6ag8HK
1/w3I+mwOC9wxUJ0HkiFbRHh/+hAk3JcW6PNwwv10LxSnn44uKckLFd9HpI/
sTW9IvdDRoxtMueBeRis0bbT0+gHC7XUD1W358EUtw4fP9UP/taz5hei56HQ
Ma1b92I/ZF837BN/Mg+/mDiyZn36genj7ynPinmw01s72B/dD7lnNCSUp+fh
noqkRsmbfuiKDEzv+jcPtn0HnXUb+oG1rFM1mHcBzoe2ez7+0g9H2XwNviks
gAfnTHb3cD9wptVdiHdYANZonUNGfAQ49h5+y/JxAWK9y4UHzAngTvrmeql7
AXri2PlDjhBQdNRNkhhm2MeeG2A+SQBLT4h3xbo/oP36zetrFwlI76rQvKT9
B87duqlsd4cA0wSj7/17/sC6B+TazCgC5mzao0wt/oD9yFDi+wcEGH4dH1dw
/QMxEd+abqURMNxByepP+wPq1K3+o2UE3Lufa21a8Ade839x/lpJwDYrHbaK
N39g+uwvcnwNASHtlo73u/7AT4OFzOgmArbEDQiyDP+B9c6D5z62ENBl6frW
ffYPWPptbej5QoBiW7CkKf8i8FuelPPoIaA1Rri5fMMilHfQBFboBFyzSPFW
2LQIdixS522+EUAhbVa8v20RjDn81UKGCGj8XN7JvGcRTMYWLO/8JMAjem+Q
u/kiFBSUtp4YIUDCvE2z32ERWm3PJ3OPE3CudSyq3HsReH8NC3VNE0CK8gaF
kEU4GBL0YmWWgAoz9om4uEXgvt9wfWaewb9A7CPmtEW4tr7nduUfAng+yex3
z18EdYdT5UeWCCi5l7NEr1wEecUIiaZlAuwP7sja37QIPHfXnvKtEsDK/966
/OsiHOb9biH3l4Cc/yzYFH4swq34Xjn+fwQcjiCK42YWQeUOidzMwKumFxyZ
mZYA81WU7dYY+eNdEnTnWwJOMDtWxcAHPga9pUsswak+6bw5Bl4IJ7ntV1yC
iqi3Uv8YOHn/E8nyrUuw/317Tg8D7+VRaZY3WIJpDLC/w8ATTa+84w4twUMR
F1U+Bn5wx1CR2WEJ6E+eyZ1inK9r8qXz4vkluHp1UO8uw99hruNB9GtLMHpM
JyyUEU9k46jm/uAlGN+x/5/NCgHbw659fxW7BIurmhnLDD4GjNmi5VOXoOBB
9C33RQJCOWMgLm8JHgzcSCpfYOihQXpiXeUSqIclznfMMfQQ8uLRxcYlmPn7
58G7GQJuGm3fT+9cgt2WmsGhUwx9cLxbMhlagl3Kjk3SEwx9vDfPejW9BBJJ
4udDRxn6CO63ll9bgmx+V/d3vxj62HueLY53GTKUJr53/CDg0rtAx4sKy7Dx
4DatSwQB0kN72Rc0lyG88xv7jj4Cmpm5nvvhMiiUXtPo6SJgI0ZMhx1ZBsvo
c6+yPhPwxcHsvqDzMhzvL97Y+R8BN64L7Yj3WAbaWL0QvZGA7or7N9PDlyHV
SyXKi6H/4G4bOeUEBt7ovJ3nDQGai+INhenL8Lp4c/i1VwREbE0WePtmGZJ7
t58YyCNAryAzuXtyGZqOBCsPJzLy03JG/8TqMuRpfg81jiMgaVxpeJhzBURf
zS4F3iNgXil/85zsCsjplFncvUVAdkZZJf/hFTg56xvbeYYA63rvE/dPrICY
2UvkcWT0g8GdrJKuK/AzhvWWhB0BxyjV+zcFr8DhM8McjaYECCU19Bi8WgFd
1ryNZ1QJqCq/499UvwIbHvBcvSxPwPkuU6r55xUgl72ePiJNwDuRz2cdRlYg
hH76zStGf/KO6l68JrkKJ7mTl96O9MO3oBHRvJurYBN65j1ncj/cS8+p0IpY
hX+CGps+x/bDzjo3h9eJq+C0J03xalg/3GeazWgoWoULV4ucrD37YZ/vitbg
0CrsEO6q9zDuh0J3Xkvyvr/wh3c0QnOEDh8fCnvnWv+FMz1Gde/66DBcL/FE
//Rf4Am5dnXLJzpIiG8avXDjL+hmr8xHFtMhsMbwds3Lv9Cobf7J14cO1qQb
xeeo/yDcJ21NeR0dlounhd+s/IPpZt8cldleWN+/uMOCaw1Et4vTad96QZWT
6cRP0TVQ2xNgsdTSC6fs+XOENNZAIS+7H573wkdW5T3OZ9ZgWtPGSu94LyRb
nfYU6FgDneDFF4Z1PZDqe35kiw0TDmo/l/3h2Q1bqrkWQ44xYYWPeFHQiW6o
Zs1iI04xIVsMVUHAtBsGIoYoEe5MqO3KcpdO7QbplGM2v8OY0Non96frpy54
WG9Wn1rJhKR01Xd35Loghk8rmURdh6PyklObqzvh1pNV87mxdfi6SjjyTGMb
MLUNYKUPC1b9EZSkWDdD4O+qVJ8AFrStu1S0S7YZuJgeM+8IZUE6h2iP81gT
kDYfqX95nwWFnlTThm81wcaQz0b5BSwYedYuKKWgEUx21h5MG2bBYG0u3tsC
DRD79Kl9qAUrGtVe5P7FeJ8iVwS82XuEFW0vOWz6L6ceHrUel2Y7wYocWbXp
n33qIfPvhoEAV1bc6rOpS0esHl7ZxJ3yDWVFgbw49cfmddDHE3TOrYoVi5UF
I8j/1YC8p/O1w0psWBambyHx7g1s1iEsn2xhw6NTp2I+ur8BLSZbtZFtbOhW
4yX7RfIN6N/dN3zDgA2bvqQe6blSCQ7pKodf2LNh53HZvfPKr+FB+4wacyQb
9lj3GrNkvwK2rTd+5s+yoRNP+qXG0WLgXflTu7zEhlHqinonnxYDqcY92ZCJ
Hcn7jCxP2xUD5YCjVS8vO3qqFLLnfyyCXU6Gdezy7GjmozZ2tqQQPO/zPDlm
y45r5dWPxDXyYWg+3prnDTt6xwjulPZ6Bml6mpfpdexoXRZkyrGcCccjWiLz
m9jxET0jRdI/E3rk2Botu9ixbb/h+OewDPhs6bHz0Sw77uD6fSMy/ylUFZpS
Nitx4M9+PoeorSng9/fnrrUtHJh2PYTpU/wT2LHv9pHP2hw4HXJGiPlDMpQM
lMdcMeTA98l+fUybH8NzAQW2qhMcSC+JSX0m9hDiXdeNHIznwOjxKyoVZ+Pg
cPkjdtlkDtSw6Y/texsLJLbttNl0DtzwX6vQc3Is3HvkZh9fxIEFxyu4zL5E
Q2BzbwvxHwfG7Z6WXmq+B/piXqOF7Rx4NeXqsvPTCFhzJHEG9nIgvlmNN715
F3yWjfUUf3PgvhKriXsmd8B9U2mxOysnjsw6rLOXDQbVK+at+jycmP+wDOfk
gmC0emxsPYkTazZkx1NVA8HZliZfLsOJJsZzr83Mb8GxkKiEdTs58aeSoV9C
6XWQaFN+2abHiXd6VSZGxfygS/rD5wxjTnx9+klsaqAPHC79y21izYllvHu8
TW96gcmPc9djLnGiyuf84n3rPGDvdVrOnmuc2MJRVbKx3h30Rfp6Fvw5cXjB
3dVM7iLoGB7YbneXE8O8i0xOPzkH2+hsLnyxnBgarcsd5n8GNK5U3X+byImo
RY+X9XQGpQy1WdozTqwAt5y2NEeQ3/1LtjOXEyXsJr3Wek8AtSPlUGgJJ6YO
l2mF2DiAtOuRGzqvObFvU/1pczk7kGAj5Y3VcOKk0WNLN2lbEH3c1JfcwInq
TzrPTRhaAWnrbR7zT5xoK1Ke/e2hBfA4zZ152ceJY1xUvrcP9wPn35x4l0FO
pN0MkBC0NgLW+07vxUc48bMUn/jbCwbAtFl6vnmKE0/ZzRV8egOwWt9J8//D
8EfRK9XkyA5YtI+02PKPEy8YzOvTcjRhbs4o4DsrF2oOwV6y62aYustUEMfD
hfUKMzsuTMvBmFx5/14SF8pyiBzXa94Avyov8S2RuZBOXhSTjROEocNKu17I
cGFOnCz1gB8TDIx9P3dMnguV7fdxfzIb1u0LTEoU2MyFz69z9ctI5+h2SR5u
qNHkws4NvyfXttTotpfw/rmsw4VcLBftAmfHdVtN322U1+NC+YM/6ljzWeDj
0PXDXUZc+PDJF0GDDhI0+G27fecgw/7yny3qr6Shfv1k4S4rLiT9llR3rJaH
6pxnAxN2XPin7f7T0ng1qNxzQiDVkQul7m4/sXFaC171kXUtz3Lh1FT+iEKr
DpR4fr7A5s6Fe7M+jPiVIBTw3kkqu8qFty52UrqO7YGcdP2ms9e50OlKuqHa
aWPI2rWyuCGQC8WZb8qFfzCF9PZihZY7XOi/K//LUt0hSLlwwfpmNBe2pyoN
l1lYwiPWjUEaCYzzrMP6mAWtIeERvXgomQubrJUt6Su2EKf14PuDDC581vzS
c5+oPUSc5sCVIi4015uIdjt/Eu6svnXLLWfc/+nYqdu6pyA47trj49Vc6JmF
MoOKTuBf/3u57j8ufKVjOHHL4Cz42KdtutrOhRu9P++svXwers4dtVXs5cIv
fI6/TF67gpvcx5d3fzH2VyUrShhfgnOVgUO6k1x4e7Jge+M9D3A+vFt4ep4L
j4Q/dpD4dhkcAvPcrVi48dsQnedJ1lU4OBSlLC3Njcc2/rIRrPODj8pD7fZy
3Bgh8PMZt4k/7L+s7Z+kxI0wqDYh3nsDjJn7W8na3FjeqffkVUQA6FOUrwof
4sbHk4F3znIHQbWLv4yFNTcOb7k3QV0IAsj/3BBlz42v9vwOJIaDYZfutQ38
Z7nRSdGp8djXUNhq/66a8xY3btX7lGM6dxdKnpLPGYVyY4dHxORfjnugMXpe
OPge43zSA+0sSiSo+pCcWZK4cWTFbNq9IAoUE47z/CvmRtaP6XkO/LEg2b5k
NfuDG3v/fPtqiAnwcMOBNfUxbtzO3cYcMJ0A4qdSstxnuLHAv3K9UkYiiM7s
XRn/x40KG9U8a4STQFAwLuWXGA9+n/LyHeJLBhZT1VH6Ph6kRp5Tu6STBrdi
A+IkD/Gg/LqCcK3MNGDqbd9tZ82DnplMQXLCT2H1rG9UlyMPxq8rNg2ZegoL
IQ1b23x50HxV00O/PANG6hxvNuTy4LTUZGNnQDbIRHedu1fCgwmdUopvuJ/D
YYeDVodf86BNpe+O+bjnULW4Q2mggQfX2ScmWuW+gJjNQu1/BnnwjYrhoZLx
XNgZ/1ZBQYIX33VsvPzNqhDunpP8FBTMi+OPSwpvhpVCjXZM+f4IXgz726ZS
9q0UFlg504XieJF0NKLaX6cMTjyZvfY4lRcDf/Q/eTNeBlrtTdSXlbwoWbul
auBoOdB3e18dmuHFXzF97b8OVoKqUKeUwXE+vExP0PfcXwPDEcO37jvx4W4n
ERV1vxp4zP3n58/zfNi+f35KOrcGeFnJRXev8eElb0lKuEAtjCwc2dsZzYcp
nQZnEzprIaOP7na2ng9DtmW6irrWg2TWj7eRm/jx6c+L2VNlH4Ab5k/2zfKj
Ujdh0p3eAtf0FDlLl/lR84Jgptb3Fhg2sMuLXCeAGzKXTzyW+QS1xjXL+gIC
qF732Tv24SfwsYiIzVYSwKx3mz/5GbfCqNPGd1dPCuDa6/YVD/gMH+9aKQp9
EsB7NzbUn1NpA53I0JaRDgEUveGnw7+/DbKiX3vW9wng1bjxjOyzbRD4QLbG
a0QAz5UecX2f2QbSrQsqk8yCWCyrsekOpR06u2vfWUkL4o9fH4c/CnWA0fjR
P1QrQXz2Tya56WcnJK+/3XbDVhD1Le/Xz7J8hbmdL/L77ARxE3/FNBvlK6Tc
WXF54CiIg8wv/QZtvsKywqMuLndBFCJHUa6+/wo5jvTyqTuC+O6a4u6o5C4Q
7DruV1UtiKWPhKMOa/eA81qI7YZ6QRyQnnlaatYDlfIFWtc+CKKlytrojEsP
nL3CNK7eIoi+5kGHFuN7oJaUeiyjVxDH2ju4lBZ6wPPAd927C4KoyFVZ/IHx
/txVe3rdURUhbP1r1bUy3QdTej0S19WEcPDXgfWRLHTgqDHTStEQQlG36LH5
9XTY9lbHZXi7EBLZnrq7tekQ91rwPw9DITxwkJv63JsOZiWVCeEOQmidx/+t
cp4OzpoaRXknGetz8mourP3gX/Ss+fNpIXyhthQ/QOqHnIKYf2LnhZBDSbYI
1PqBO/fM6XQvITT+8fzvM6d+eJ+xfsubKCE0PHRTc7ShH/rl7uwbiBXCyxVy
P8+298P80zVHlngh3PxQZbaY6Ae5tJH7+x4L4UMeBb3s+X64lVy90pEthDhE
lxGWIeCh1DaRpRwh3DGSsjKsSEDhoxeqkgVC6HIlNSVQgzE/P3xw0rFUCB/H
akZJGjLm8fgLHyZqhdDp90WocGHMd6LfB4TeC+Elh2sJXy8S4HrfZlmrUQhl
i7a4vPEi4FGs/mbfT0IY8tCi5VswASWkV3uTvwjhlpxgKQpjfmyO3nyipkMI
U32ZD8nfJ2A5khzL0SeEFSfPfg1LI4AkcC9HiRBChV2Ko8NZBGy6x/L+wHch
ZGPrPs6TT4Dt3YnF2F9CeProwlx2BQEXeU6TykaFcPTGuT5aNWP+vdOt3DMh
hA1q34tOvyPgZWi9A2VeCAM+HH+v84mALJNmcsiiEHJeObWi1s7gg/fLl/EV
Iby7YSXzG2P+jmjpunt4TQhLjUpzzegE3Iwi9r5mJuHPa4/nvb8RcNlimInK
TsKt9zSdTzDme+f14xWhXCQ03+j1i/k3AUc6Zz0neUmYPjLofHLs/9+7llWt
BUko23v5P99JAuDout+VwiRcuprCZTFDgIYk51OaGAnrfpziHpojQK6f/9gd
CRKe5dGpVv9DgFiKiNi0FAml78lK7VwigNtR8rONLAmHPz5az7RCwCqNFl4l
R0KOD0VJN1cJmPyxyXCjIgnfzE5mVf4l4PuzLWvhyiSM53bRKvlHQMdZ7fIZ
VRJyVhZqu6wR0KCse/mIBgmNjk7ndjBwxfiezdVbSXjQ41PsGgPn5u//Kb+D
hKOH/X8OMXDKJYvUiF0k7Igszwpi4BjNI3ZzQMKn1u+7vjH2D5o/LmJnQML7
vZd9lhjnXytz/lSzl4SbEzbEfGT4d97bNUzRhITnglI32jH8d9jpaRB5gIRv
DTx3ZTDiO/TX5+/8IRIma0QQzxnxG7wNKLM/TMILXu7iF+YJ2BYQeqnOhoTa
cyoLvxj8KRpEKivZkTBxs/1t2SkCNrA9+BHlQEJDCrVVZJwA/g+Pnvw5ScKP
bJvH3zHysy7s6REHJxJOcL4cUx8mYM7kufC7MyQU+e37/ch3ArpbykJiLpKw
NtiHo7+bgI9RVXpLHiR8HfDNSaeDgCqLdyvHr5JQ6tkQ2bKVgPTOLxc3Xyfh
Hcvx0XKG3uITujfF3SShlbitESdDj3eODgwu3ybhlXYFN+H/67V/3KbhDgm/
BV/IOJFLgM4w4903gYRFdgJ1PVEEbM4SWG5MImFNQaCXcBgBlHOiJVueMPzR
2LeZO4AAtgma4r8MEhp4T1tquBPQOq8rmFjMyN8rpu8e+wmoKzNsWisloYPW
55EUPQJKvU0DnStIKLBXIeyeNgFJf48satYwzt/RcD6bytAv25WBlhYS8s7v
PjbE6BcSMo1fVz6TsFNbVmhgpB9atkt9Uuxg6MfMbV8Go79su/Duza1eBp82
5zdGMPoRe5tI0rZfDH1/L+nsiu+HjJRSq+R1wjiUxFt5X6UfbCu4DzSzCuOr
fqcWQ+l+4G132LPIIYyORtNmdQL94MnBoWnBL4w/VY0rFWbosMfNRpB9gzCe
fkjanFxCh6Gdi02uWsJo7zvbfnsLHRKsTGsfagtjS/qZgc0ydDC9mFL+QUcY
KbdWlJ/z0aEkzThLVk8YVSWD2yRG+iCQKzGo44AwilSIvvmR0gdyX3fgbhdh
3FJMYbvI3genPHxf8j4UxqYpVfuu4h7YptH/ctNjYYTW+MMjj3uAewZL96YI
Y9qGx/d6Q3qg4BJ72c1MxvmNXkbH7Hpg1T361VyRMB7IbXX4xdQDDy4+e93X
LIwcsooFHnu7ofFCW03OX2H81yZuIVj1FdRclFtMT65HrwkLcuiVdvhEUuG5
skMEdyfH2Ow2aAJdV9ffSbtE8LfjvthS/ibI+5D3oRZEUOF+vMbBnka456ce
KLhXBMmn3lT0XGoE0+Ftf19YiOCVo5lBXmkN0FSuN/n9vAiWUz+Ub+H+AO9O
2LQdShbBU70Koz8X6kDrdUKhV6oIqgk8apb6UAfpIj2RyekieNovveJmfB0E
Ntmbjj0XwUiXvfs+ba8DfS3HdyFlItj7RDk08XotVHO4llW1imCVaGG2umAN
vM67laTCIooHNz6WPlJWCeymVhLx7KIoIrSn5/SxSjD/rZC4jlsUNZsfdk2z
VMJP2n8POgVFMe2cCUeMxWsQThSLuSktiqquBm4r8+Vw/nZOaPsOUbzBLro6
YlUGpZQbHLBbFJdJqYcOsJbBuirz4GwURYkdbfo7ikshfnHhtr+RKC5x3XuZ
TyqFOle9G4pWovjtY60WtasENth2XvFzF0WDJOB3v14EzvNZc8OXRfHB93+C
D7WKoDDG97K5lyjm1ecfsRwrBKP/KJfk/UXxjtj1T57HCuGy/vkLreGieEhz
nYnP3gJoVmE6JfdMFD9rZyXdcMkB33VKhz7SRXFgT/yX0MV0GN7D0yX/TRRL
LltVOESkw6HQseMBQ6Jo3KFjaE5LBzmB/IvbRkWxV8Hc/K7FU/goqRWZsshY
z983dKQqFaS367Z4CouhUIy9bPiDxxDqK2P9SVQMT4uW8NcMPoKZKqb+TRJi
+Nnepnmz5iP4YFg33k8Rw3+WhQbPux6Cu6Ux3z5VMWRLwlmabgLUulmYSu0T
wwzN6qE8j1hQKdJs9zIVQyvW3GcbBmPgwfx6+y9mYlhV9ppcZhUD5/2+ng+x
FsOj1tpmXnrRsP6Offj0KTEkTN4rkpzvgf9/u4VNXRj2cG4g72wE/BKUSco8
J4bfTTo1Hl+6C2/ivz23uySG1xKTqWfu3QHnDOemd/5ieL5R+E3ISjC0/jKy
oNwSQ64XLSK3ZINBR2VTj0+QGO57WqRSvT8IBIpHf6vdZdjv/EViyr0Nr6rd
uR4miuEdc6UE27SbQGW1iJ57JIbsSyn0K+034K6RprhZihhOJUiGpl3wh5Mt
84qsz8RQmCWVj1bqC9x9PsZuJWK4RyEgyjj3KmzzyuaLLBPDoOGnZT2xV+Ak
qetLfgUDB3xaTg7whFfGW49NV4th6ifrxTwPDxgaPEUl1Yuhacxu1dkrl0Dg
RsxPjQ8MvkuDvY7edAfnl5OXPP8Tw401byvYrFwh5pC09v1WMexhTzp1Le48
vBk1XX3ZJoYzO7SESd/Pwnrq8+A/3WKY3nH55cNnzlBz73SSz7AYthpHT0r3
noCxTbEnkn6LYbCam3mryHEgv6vZWDkmhgOEs49qtD24rUgX/J0RQ4dGtSfc
vTbw8MGBK9ILYihzyzjPOdsK3qn76cCSGN7uC08yibUEyTPd9TfXxFA6+blS
k4cZGLNw3kllJuPsOvvG6ZH9cDl5m1ktGxljj1xVT040huQdTusHOcm4+UW+
Uo6/ITS1x3az8JJxS4LwgcVEfVi4WJssJ0DGra9qWKo6AWR5pk8ZksjYENTI
6f1DB0wzZTY5i5DRjpr9rvv4NsY8c3AimExG1r/7/sUbakB6n1/xsw1k/DHv
D50qm+GT14trDdJkfNHRe3t9ujwsk3p2/5YlY5uUnYXtFAXk8zhZuDeSUa8n
U0aKSgbzfdoNSoqMdZkpJiMeQfAbcorYr0xGWqGUCs82Fsi6EWdxQZWMoUqR
xGuc1W2TqBOLUCdjir+0QEBij+6/l9N9uVoMex/L9+bcT3WVzClpLdpk5Ajv
/9smVahrNXbQZVKHjE29OW13JQd0b4ZcVxHUJeMIXendp9B53RxqzvQWPTIu
Z9g62VWxwtc3PaXme8joNfNU48CSIDAf4fLzMCLjOufv1cfVxEF1Tlsv1oSM
/b16X8k3ZeFopDN7yQEyHj74fZPRVgUIUrrf3H6IjMo727lTSjdDwbu6qHlL
MmrqDUnUB2hA34kZK1EbMv7OU18qjNgGnKuUDdpHySj0xS+8+Z8OaMabDdgc
I+MZ2tOg2naAO//lnEs8RUbeaV0dDhtDKD3Tq1bhTMadlVuHHG2N4RsL93zP
WTKOH0hNiwzfD9t1XG5IupNxxbSqw8HAHE513N+z+zIZbfQNC7UVLOGeez2X
w1UyUjv2BGbTrOBHpmzcEz8yOpF6mTmdj8BY4Lcllptk1NYu38PTbwczjqnH
z9wmo5TzXFKShwMwycgqq98h48YLogf9F08C+9+BqPsRZJx4t9Bp6noK+HpT
FpaiyEj4llqqTp0GiXhKbW08GaOYn5gtyJwB2SsDCgpJZFQr2d1e+/EsKFqm
RIQnk/HZTQFbt5DzsFWAcuRwBhkVefXVVOUvwqEQmakfRWRkajE+N337Mtg4
EVYmpQw+mHkTJKM9wcHgyeu8cjKm+jyiM2dcgfNr0iFe1WScbG20Hh7wgmAv
aWmuFjIe/2iy7VCWH1S6SJmq/CYj20FJn5my21BnSC+MGmPol0VGtt0jEJpo
j8XmJ8l47t+Qdf+WIPhKSA6+WSBj/cRRyvHSYJixkfQxYxVHgdJtqyXDYaBo
vCHLQ0YcP8S/Exq6EAVq8r18X6niGEhXy/78PQq2sSZd3ikvjpUtqz+3H40G
g2oJYN0sjrEemS9dD8SAw3aJzvs64qi6mV9A3zAO4hTFWcutxPH9oQsmVO8E
sHeQfzZoK47t9yLTfVcTQC5O04TfXhw1De+u5whIhJK1A1GnHMVx+9jd7ryI
h9DeeUuS/6I4WpYq+Uu+fATCQWNap0LFkTn0d0ba4xSI+fbWie+1OLrmXeKr
i8iAo2L/cW6vEsf14fkeRt8ygHqg54VjjTg+smp4bbY1E4pezU2XfRDHDUZN
J373Z8KXyE3+ju3ieLzwSLvq9iwQ0o19UDYujun6FmwezC8g6qHzh5MUCSyJ
zRIpvFYAXldvXfajSeBhFxUB8ewCcLBIlomXl8BZjeDU0u4CUOHu9PqoIoFf
NPmdoncWQqO3oaL2DgkU8Xi/8826Ikb9yYXxWkjgORqTfG58MVwR+25SdlsC
423ID0Z/lsLRuGMtvD8lcIS5maTEXQWLezKWnlRtwBJim/q3px9g8If+tdoQ
STx+qe0Vm3wrpO1W3/DfSSm0TdGJMaC3Q27QFSGXzdLopP5jn+ZqF4ztOnYr
aIs0dh62ijjB0w0qc3tmn2pKY1Oq+qlAiW547ri+Y2CHNBqonnLL394NWVCc
cHSvNOY1XE6I8uyG9KUpmYPHpXFPlELR+ZFueOh6QXVrtDRalB2S//FfD/TI
HX5iGSeNrBHJ4696e0C8b6egR7w0eg4Inrn5uwcSTHhm8h5L43PKR5ER1l64
r/D8peJzxn73PHM27uyFqG8/d0nWSaPRfW9jxYxeCLE6tZ9lXhonG+W8Xrj1
QZpZn73TojSuPxCt3OzbB5X7rNw+rEjj1aG43K7QPpjZbRQdziyDi24KsZVp
fWAvr/xVWFAGE6pNVNI7+kDjz4yjnLIMBmwtCWjXpsOB6fOewaoyOLVZgrnG
gA5nRoeCfqnLIB9XiUKiGR0eE51ZOdtl8PdDlg4eFzpwNlRMaO2VweCZ/e0L
cXToT7jlY3hSBksnMpbqxuiwFLMS/uy0DBbbkDmO/qHD+gjPx1xnZHDDmrB3
97p+2BfgXP2fmwy++Hj6T6xoP5ScNWG39pPB/zwXzWd1++GODinGOV4Gr8rt
G9AJZ8wnWuFPGx7K4NtfPxqt4vqhWpX1pVKyDPpOddXYPO6HeerC14l0GTS+
mLlHML8fTvD0SHkVyeDeC7fPmn3uh619qdkh/8lga5t20pAgAYKqZxbzW2Uw
SkQ3hxAjYOyGqlFXmwx6+5iN10oz5kPa6yHFHhlcSJcN0FMhYP35dpmmYRlk
nWu4tmEvAVOVD91mfstg6HxW7GFTxrzJf/KNxLgMsqesDHhaEBBYNH70/KwM
BkpVxp5zIGDZj2U/OxMF99sL9stfIeBXhrPHw3UU9BMVFnrgQ0BnS2OiKgsF
Uw7leI3eIKCIEvXLmp2CXseYTxjfIeBcvWTwM14KNvqWyHx4TIDt+I3cnfwM
+/Uzl06nEbBXdLD9kwAFy74GLA5nEkA9k01bJFEw5xkPLSmfMR/zbKsxFqeg
8PSLS5VvCXivlfirT4KCu4osRm7UEVBybFXgkiQF2YITExQ+EBCVX+uQKEPB
2jwRMVoLAf5dG4M3y1LwwPDQs6ufCbiwLiy3hkrB+k1hk7ntBBhbmq3+3kjB
ZbUhuQ89jHnfr4jmr0DB/wKvt2XRCZDLENlP2sTw71BRhesAAUx/ehN1VChY
1av6MuUHARMyUNOymYKde0vD+H8R0Gec9stRjYIxPUfEj48Q8OrhGe1wDQqK
JfONP5sgILOu2UFGi4ILlNaZJ1MExI2pBhdvpWAWfb22zwwBt0Rico20KfjG
s//htjkC3HXn23u3U5D3gt5a+zwBDi62qxd1KOg5dtrQ6g8BplGvaay7KCh9
6/bBskXGfF8uvT9hNwVNiNGV//+fovg9wEMFKMiauk6NskKAKM+PxGqk4Kio
bqP8///X0TKuOaxPwY+86jn8fwmYsX/x65cBBdfFB5R/ZeCBIH7B64YM/r9N
fAn4R0BL3iVtISMK1vw71MO7RkDl13aHDGNGft8mFl5j4OdM24N3mFAwM6hD
5x0DJ2xKyv1vPwXXS6rYzjDw3OzejNsHKLjWU/Xk/997zKpmHu0wo2BuRPCr
n/+/PzQ5bvIQBb2jVv2eMzC7pcndDAsKVvO/+2DEwI5SC7ftDlMw8kjB5bcM
f6p+pvoKWVNQRL/SToiBJYoOXP5gQ8GEayJ2uxn+X/FbOnf9CIPfCfIBA0a8
rXszHDXtKLhP14qPxuBDRcj86G97Cmqtv+vVx+ArtHfV/IkDBQuSi10uMvgc
ysjaZ3WCgseYFst7FwhA98N6PI4U7HlfaSLLyEeSDtOOmlOMdafkBZglwOKT
jeJmFwoGu5sJc04SkJfIQhk8Q8HwhgDdwjECuE7niyWeoyDlW+KSBkMf1Yvs
HGxuFByTXn3wdogAybqifxUXKagYkLu16RsB1yIcFtwvUTDsoCg9p58ANWrp
jz5PCjo40muWvhJwZ+wkPeYqBZ2Net6cYuh5uJSvw/gaBU3lP0FG6///j3Kq
L/GlYMYeBeu8BgJ4r6x/evcWBW1dZk92lBJwBqof6gdSMEiVSXaxkIA6rgsx
i0GM/GX6X5zOIcAnuS7gdBgF844L7HVh1OvvDx4ndkUx6mWN/Y19OAF7YqRt
Z6Ip2CzysmtLEAEp9k1mWbEUbAjVTO/xZ9T7tCysj6fg8+gz3/MuMepX4rPU
2GMKnklFHRsrRr3/8BNJe0JBiStygp0HCLier8hnm0pB5ekvrZsY/Uprz83V
unQKPvJqemW2jYA0V7XepBcUJEbNm2LWE3CjOiJhfzkFJypPDAw19MMIvTpu
qYKRb400UndVP1ivzEY9q6QgChYkp5X0g8q2o2Es1RSkPzONevmkH7peyPu8
fk9B8Ysl97ov94NG/Fs75XYK6oR7PhJa3w+PS2ZsujsoONJyLtaaox84v2w8
HPKVgocrle3cl+lA8N41HeyhoFpQmDl1gA53b9nuTvpGQaanbgU3sukw7Dot
zTPJ0EfEeTNZLTqYh8ttKJ+i4OfGBq9iOTpUZtmIucxQkIdSHy8hQofYwTcC
dfMM/Mxi0GW+D/DIHSbfVQqSvpG71or74OEe2vcRLlm0YffxVt/UBwc2WGU0
ycnihR+vD6rMMZ7PQ6rVdvKyuJqnYD800ANDuZy9YwqyGD8t4erNeL77YaWg
gLIsNtmUi+7M7IEcJ5qfpbosjiuMy1Cse4C7YNqib7csrjd4bBGV3w0f9txj
mrCWxYBqQcPNJl2g5/bBTihMFsNulD6gKXXActfvvfV3ZFHsnBeTFV8HlBjw
anjdlcUMRz2661Q7yIubc9IjZVGp4r9Ym9J24K3vKcl6IItS5mPPRPXaoUt8
gg/TZdGjR1w73aIN3N+tr3Z7K4sKi9cENM9+hieSjnIf52Vx46nC3xFMzaCj
qazq+Idhnxt+/9D7JmjfN6e9uCiLagtW/pS7TcDpFbxfblUWJ1Y/PBsVawL3
z889/JipeLFiqsZ4SyNg8Gy1igAVRa25uH6f/gDfJwOPRShSMbt0+SjPUB34
sR90oSlR8dCdd5pauXUgKiV2qVyZij6X7D8HX60DE5PswB+qVEya0HyXw1UH
Ren/vdi9lYpe0ZcMhDVq4fYR0eVxPSremekYZL1bDXJ1zx4ctKPiKj14p3R7
BbSoLKb32VPx+FaL3l9XKuDaA+Picw5UzNGkLWmSK6D57O9PwSep6J0mNnTI
oRw8BJW53rpQUbxMdHfjVBm8PZbnq+ZJRT8tl6gPai/hzId/YW+uUDHaiSlH
racESOpmCfu9qHjaZCxVOagEnFmnSlx8qGgVHuk32FcMvC/UJ57cpKJb8dda
99giOLpYckIwgoo9Rmp6Q1IFwOrIdjH5HhXjVi8686TnQ16z1XWVKCpe9ah4
fp8vH9Y9WUg0jmXwaaWhHTKUC1mG29tuJlLR+sXwEG/aC5iPeW04nUHFvtF4
2l/7Z5C8ynP4xjMq9s//jPDsyQRjZ3tHvmwqXq/Ntdt/JBMe7fjrvymHiv8o
mfySdhmgP6D76mQRFV1r+6LPXXwKUZtrlb5UUbG2b1L2UNkTyNpux3Wrmoot
xzX0Fz8mw1uDuZ/qtVTc1lb/et3wY5g4Ip8R/Y6KRj8f70TqI9gffEfG/CMV
aRv0MakuARyjaf+YWqjo+H46zn8uHnweVfYVfKLig4d0sVbFeMgqmkgUbKNi
U3HHjdqk+8BOWKxv7aaixPdsZeYXMSA1Mjpzo5eKapy53Z5/okFrPvCzGp2K
CXMS+44ZRcMpnrJ7kQOMfJ1XPkkbjIRq7Q1cZj8Z8SXx6ioSd6BLv+Tnv19U
5FpSbQjID4PJAwfe540w+C1262sODgXp0zdu809Q8crkNKibBINv1ODf/+ao
OHG7anSr3C2ISfLru75ARWWBK5+4VALgeabI682LVPzusOVpo85N6Ko0uhax
QkXWH/Gygj1+MPVhwHr3XyqORdolcMj6Akeb99bxf1R0qHK/2nzFG7b9fjFj
ykxDk+umv7KNr8KBuT2fV1loKJIKkZXvPeH0Gj0/h42GvUWb34VbXIZYEUFX
Xi4aPrr5WuJArDs8p2Tvr+SmYavVaadzUW5Qq6yvdIGXhiTjY/HhIhdgSs/z
Z7MADfff37s/9pILcB7ge+8rRMOGis7ik8ZOIGObma4sTMN/xbcmDumcgm2n
4HbvehpGXH5Raml0Eg66dZ0MF6UhWXb64at+B3DyvoQ7yTTM1n248Oq0HfgF
csuMitPwJvNZajjFFl483NVnIkXD4qm5HqUdFlCb0VGxLE1DOvnGDg9lM+gp
cEt8TqGh5PODu7eamcD0a45rR6k0rPp7lduObgicH1KsueVoKBo9qZbcoQeU
Lzu2VmykoY3JkuDFi7tAm/5F+JwCDSdzTAIq2bfBwV/nZ8Q30ZA2t7880n0L
OM+yfm5UoqHTrdqlFFsFcHi+p8VehYbulmn6Q90yYH0ysHlyMw25rIjWe93C
cJBc33BLjYa3tlt1nLVng72fWN6LqNPQ3O0SE7PNtK5usEFdlgYN/XotCePa
Rt1tu29X79SiYc72nsa+dfd1Vedq37RspeFlcRajSf1vuvIvmF+f1GbEz/d9
qUBsVVfaUf/V3HYaUteu/22z5gNR8VsvQ3QYfLD1V4SLigN/a02RxC4aFg2y
NftTacAesq4gdzcNTS0qi9UllOHfbr1cBBr61JC0H2zXgIW5m8/bkIbz3085
S8Zqw8SL6mfO+jTcue+GDf+j3fDDkSljyYCG7bbXA5036UOfOKbdNWTwRzva
YNdrCO2tN57IGNHQW0w+5v7gPvgY8vZRkTENg2yromr0DkK97lqioQlDD9tS
DN/7mEPlvG58134a3mdP0jBfs4SSHP+48wdoaCl4QsgmzxrSJf7diz5Ew6OR
V+8ohNvDo8+778pZ0HD2Jgtf0qvjEBd6PazMkoaCWsvPx0NOQuDC6m26NSP/
o92tIVJOcPrLyrVNx2i4Umbz5Rm4gn3YzquVDjTU4GE+IuF7EQ6j72WzEzTU
zlQePfbDHfbkLbteOUXDLPt7VqKWl0HuzpJjzVkaEjPhH6IzroGk3o4Th88z
6qVd16WU5APrF68d+3mBhk+lTl+JDvMFVudFGz53GgYkZC5sj/OHQb0/pkeu
0vDjOjy0EHELeha3mYx50TDz+gVq0bnb8CX/qtENbxq+tx70FDUNhFqpBb0M
P8Z+X44VVUkGQ9rS3LbpWzTMY33e2DkXBo6FM5SwSBqmRj5Yr7o7Gi7cslw1
iabhNh0THueBaLhiWfKVN5aGHJe8bPWDYyB0/sq9qAcM/bA28HZ0x0LejqWV
+Mc0dP43P0l/8gCWatY6M1/QMH+LS4nZ00fAHHui6EwuDc+3itlFuz0G3tM1
EUr5NOwaf9qptCsZpNlv78krYvSDTZvYLPqfwB4T9qKX5TSUeW9CnU9Ohagv
vBH1H2gocf5YEptmBjx86nomuJGGriuG/HueZ8BTzxYD42YaslzpmAihZkKp
aNRycwujHt99OSsq+gz6jgqfaeugoYdpWzgPVzYoDIobfB+k4UXz1E4DyVzY
UuIjnf6DhlP71x+qTMsFnaDeJaefNOwsqnJbr5QHpgqPC36PMPzVSDh8dGc+
eJynSE9PM/LHxkL6V1wAfrsClopmGfUjEhmZsFwAQXzf2z3nGfHM+eYk6hVC
Qv7T8MVFGtrZ7dBpbi2EtJusLhXLNCw0FT6zRC6CF+ZO+n6rNGwROJMfdrII
SqjvpXT/MfqT8PyUz/MiqJqVX1pbo2Flwkn+j7NF8D8KbLrD
          "]]}, Annotation[#, "Charting`Private`Tag$8430#4"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        TagBox["\"t\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"\\!\\(\\*SubscriptBox[\\(P\\), \\(1\\)]\\)(t)\"", HoldForm],
         TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> Identity,
      Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {0., 0.49999999253059396`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Exact\"", "\"r = 1\"", "\"r = 3\"", "\"r = 5\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8, 0, 0], 
                    Dashing[Medium], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8, 0, 0], 
                    Dashing[Medium], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.4, 0], 
                    Dashing[{0, Small, Small, Small}], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0.4, 0], 
                    Dashing[{0, Small, Small, Small}], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[0.18], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1], 
                    Dashing[0.18], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.8, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", "Medium", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.008`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0.4, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.008`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", "0.02`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.008`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.945272354364852*^9, 3.945272391061947*^9, 3.9452725293065157`*^9, 
   3.945272698470067*^9, {3.9452727290799007`*^9, 3.945272784711698*^9}, 
   3.9452728464753304`*^9, {3.9452728766244717`*^9, 3.945272905416711*^9}, {
   3.9452729884347353`*^9, 3.945273013958164*^9}, {3.945273090371472*^9, 
   3.945273133615615*^9}, 3.9453584206912003`*^9, 3.945358565992972*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"77d69e73-40c2-4bb8-8a11-deeae9c32f28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<JacobiAnger.pdf\>\"", ",", "plot"}], "]"}]], "Input",
 CellChangeTimes->{{3.945276311256013*^9, 3.945276341490584*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"13443570-9bee-4cb2-88af-9c8a905cf53e"],

Cell[BoxData["\<\"JacobiAnger.pdf\"\>"], "Output",
 CellChangeTimes->{3.945358603088241*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"66b09761-210b-4baf-abd5-d502d3154388"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{606., 665.25},
WindowMargins->{{51.75, Automatic}, {6.75, Automatic}},
FrontEndVersion->"13.2 for Linux x86 (64-bit) (December 7, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"04dbf729-1337-4f01-aa0b-72f3a3669e0e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 158, 3, 68, "Section",ExpressionUUID->"d99185b5-faa5-45ae-95f9-d0826cecb74c"],
Cell[CellGroupData[{
Cell[763, 29, 157, 3, 54, "Subsection",ExpressionUUID->"036c22ba-eaee-40d8-940a-bc0c6d1fe605"],
Cell[CellGroupData[{
Cell[945, 36, 608, 15, 56, "Input",ExpressionUUID->"49d3b3e8-e949-404c-aa0c-12813efc3433"],
Cell[1556, 53, 249, 5, 36, "Output",ExpressionUUID->"6dd49eb4-177b-4814-8871-a132b051373a"],
Cell[1808, 60, 265, 6, 36, "Output",ExpressionUUID->"297e05fd-bc65-4594-9de6-4859602170b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2110, 71, 328, 6, 54, "Input",ExpressionUUID->"2c73b044-2bcb-42c4-8aa3-bfe8e1ad85a3"],
Cell[2441, 79, 221, 3, 33, "Output",ExpressionUUID->"48116736-6a34-4e10-b1dc-9919beea4f5f"],
Cell[2665, 84, 310, 7, 36, "Output",ExpressionUUID->"b456b5a4-5e34-4109-a281-e072be8f65cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3012, 96, 306, 7, 33, "Input",ExpressionUUID->"36acf10c-a282-4a85-a590-0d666971ba49"],
Cell[3321, 105, 339, 9, 37, "Output",ExpressionUUID->"23ebcba2-3fa4-4181-a446-d4e1790f059c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3697, 119, 307, 7, 33, "Input",ExpressionUUID->"0a1a0baf-8610-49fe-830e-bf2f1fca3866"],
Cell[4007, 128, 298, 7, 36, "Output",ExpressionUUID->"51930d46-6dd7-4c3f-b85a-6ddc815eaab4"]
}, Open  ]],
Cell[4320, 138, 1633, 42, 121, "Input",ExpressionUUID->"7339447c-0107-4be7-ae86-b08ee3a02719"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5990, 185, 160, 3, 54, "Subsection",ExpressionUUID->"785dbf27-e660-4eb1-8d2b-650ef7f2f7f9"],
Cell[CellGroupData[{
Cell[6175, 192, 506, 14, 47, "Input",ExpressionUUID->"d8b23113-dfe8-4a0d-bebf-2f98ac9eacee"],
Cell[6684, 208, 497, 17, 51, "Output",ExpressionUUID->"8bbebd65-7a07-429d-8964-094db33ca1cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7218, 230, 360, 9, 33, "Input",ExpressionUUID->"5791f555-eed8-4d97-8458-33df6024bba9"],
Cell[7581, 241, 976, 31, 56, "Output",ExpressionUUID->"d882ad89-f160-4320-bc78-acebc5814492"]
}, Open  ]],
Cell[8572, 275, 2226, 60, 124, "Input",ExpressionUUID->"cd88a139-29dc-4383-bd48-22cd819f0573"],
Cell[CellGroupData[{
Cell[10823, 339, 3312, 100, 214, "Input",ExpressionUUID->"78ebc70e-6611-4f3a-96f8-f6adfc15ffd1"],
Cell[14138, 441, 575, 11, 47, "Output",ExpressionUUID->"c3e2ebfc-247f-42fa-aaf9-dedff6b22e4b"],
Cell[14716, 454, 844, 20, 37, "Output",ExpressionUUID->"5aad0051-0ab4-44dc-ac8f-e5cdd9fb04b2"],
Cell[15563, 476, 1441, 38, 61, "Output",ExpressionUUID->"9f82b6e9-b473-4f88-9295-9d06dbdd73dd"],
Cell[17007, 516, 1234, 32, 37, "Output",ExpressionUUID->"874cdb10-2191-45e1-ad0c-f6369dbf5e65"],
Cell[18244, 550, 2905, 81, 82, "Output",ExpressionUUID->"bf513751-4037-43a2-8deb-099fd17a1dd1"],
Cell[21152, 633, 1335, 35, 37, "Output",ExpressionUUID->"f9202c05-0420-4646-b0b6-173da3286576"],
Cell[22490, 670, 3165, 88, 217, "Output",ExpressionUUID->"d276698d-a3b2-45e5-9eca-74ccac377238"],
Cell[25658, 760, 1604, 43, 81, "Output",ExpressionUUID->"58f00f05-2f98-42a5-a62d-0ebbe85df888"],
Cell[27265, 805, 3987, 110, 261, "Output",ExpressionUUID->"f811998b-4e12-40d3-afb6-c5471c7d3de1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31289, 920, 1970, 47, 159, "Input",ExpressionUUID->"af0a4c9a-1b49-4fcf-9044-7fa4d37d9486"],
Cell[33262, 969, 89825, 1558, 252, "Output",ExpressionUUID->"77d69e73-40c2-4bb8-8a11-deeae9c32f28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123124, 2532, 252, 4, 29, "Input",ExpressionUUID->"13443570-9bee-4cb2-88af-9c8a905cf53e"],
Cell[123379, 2538, 171, 2, 82, "Output",ExpressionUUID->"66b09761-210b-4baf-abd5-d502d3154388"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

